1.Registro de estudiantes

public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        Estudiante alumno = new Estudiante();
        alumno.mostrarInfo();
        alumno.subirCalificacion(7.4);
        alumno.mostrarInfo();
        alumno.bajarCalificacion(2.0);
        alumno.mostrarInfo();
    }


public class Estudiante {
    String nombre = "Javier", apellido = "Martinez", curso = "Matematicas";
    double calificacion = 0.0;


    public void mostrarInfo(){
        System.out.println("Nombre: "+nombre+" Apellido: "+apellido+" Curso: "+curso+" Calificacion: "+calificacion);
    }
    
    public double subirCalificacion(double puntos){
        if (puntos > calificacion){
            calificacion = puntos;
        }
        return calificacion;
    }
    
    
    public double bajarCalificacion(double puntos){
        if (puntos < calificacion){
            calificacion = puntos;
        }
        return calificacion;
    }
}



2.Registro de mascotas

public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        Mascotas mascota = new Mascotas();
        
        System.out.println("Informe mascota 2023");
        mascota.mostrarInfo();
        System.out.println("Pasaron 2 anios");
        mascota.cumplirAnios();
        mascota.cumplirAnios();
        System.out.println("Informe mascota 2025");
        mascota.mostrarInfo();
    }
}


public class Mascotas {
    String nombre = "Bomber", especie = "Dalmata";
    int edad = 4;


    public void mostrarInfo(){
        System.out.println("Nombre: "+nombre);
        System.out.println("Especie: "+especie);
        System.out.println("Edad: "+edad);
    }
    
    public void cumplirAnios(){
        edad += 1;
    }
}



3.Encapsulamiento con la Clase Libro

public static void main(String[] args) {
        Libros libro = new Libros();
        String titulo = libro.getTitulo();
        String autor = libro.getAutor();
        int anio = libro.getAnioPublicacion();
        System.out.println("Libro: "+titulo+" - Autor: "+autor);
        System.out.println("Anio publicacion: "+anio);
        //Anio erroneo, lo corregimos con un valor invalido y mostramos lo que devuelve
        anio = libro.setAnioPublicacion(2026);
        System.out.println("Anio publicacion: "+anio);
        //No se modifica devido a que la condicion pide que sea entre el 2025 y 0 sin inlcuir el ultimo
        anio = libro.setAnioPublicacion(1949);
        //Ahora si le dimos un valor valido y en este caso el anio correcto de publicacion
        System.out.println("-------------------------------");
        System.out.println("Anio de publicacion corregido");
        System.out.println("-------------------------------");
        System.out.println("Libro: "+titulo+" - Autor: "+autor);
        System.out.println("Anio publicacion: "+anio);
    }


public class Libros {
    private String titulo = "El Aleph";
    private String autor = "Jorge Luis Borges";
    private int anioPublicacion = 1939;

    public String getTitulo() {
        return titulo;
    }

    public String getAutor() {
        return autor;
    }

    public int getAnioPublicacion() {
        return anioPublicacion;
    }

    public int setAnioPublicacion(int anio) {
        if ((anio <= 2025) && (anio > 0)){
            anioPublicacion = anio;
        }
        return anioPublicacion;
    }
}



4.Simulación gallinero

public static void main(String[] args) {
        Gallina g1 = new Gallina();
        Gallina g2 = new Gallina();
        
        //Primera gallina
        g1.setIdGallina(43);
        g1.setEdad(2);
        g1.setPonerHuevos(320);
        //Segunda gallina
        g2.setIdGallina(21);
        g2.setEdad(3);
        g2.setPonerHuevos(600);
        
        //Mostramos su estado actual
        g1.mostrarEstado();
        g2.mostrarEstado();
        
        //Hacemos que envejescan y pongan huevos y mostramos su resultado
        g1.envejecer();
        g1.setPonerHuevos(300);
        g2.envejecer();
        g2.setPonerHuevos(250);
        
        g1.mostrarEstado();
        g2.mostrarEstado();
    }


public class Gallina {
    private int idGallina, edad, huevosPuestos = 0;


    public void setIdGallina(int id) {
        if (esPositivo(id)){
            idGallina = id;
        }
    }

    public void setEdad(int n) {
        if (esPositivo(n)){
            edad = n;
        }
    }

    public void setPonerHuevos(int huevos) {
        if (esPositivo(huevos)){
            huevosPuestos += huevos;
        }
    }
    
    public void envejecer(){
        edad += 1;
    }
    
    public void mostrarEstado(){
        System.out.println("ID-Gallina: "+idGallina);
        System.out.println("Edad: "+edad+" anios");
        System.out.println("Huevos totales puestos: "+huevosPuestos);
        System.out.println("-----------------------------------------");
    }
    
    public boolean esPositivo(int n){
        return n >= 0;
    }




5.Nave espacial

public static void main(String[] args) {
        NaveEspacial nave = new NaveEspacial();
        
        //Primero mostramos el estado de la nave e intentamos despegar
        nave.mostrarEstado();
        nave.despegar();
        //No se puede devido a que no hay combustible
        nave.mostrarEstado();
        //Recargamos combustible y volvemos a intentar
        nave.recargarCombustible(50);
        nave.despegar();
        nave.mostrarEstado();
        //Nos muestra que despego y se usaron 5 unidades de combustible en el respegue
        //Ahora intentamos avanzar
        nave.avanzar(10);
        nave.mostrarEstado();
        //Se pudo avanzar 10 km y se restó el combustible utilizado
        //Ahora si queremos avanzar mas allá de nuestra capacidad de combustible:
        nave.avanzar(10000);
        //Nos dira que no se puede, lo mismo si queremos cargar combustible negativo
        nave.recargarCombustible(-10);
    }


public class NaveEspacial {
    private String nombre = "HORNERO-F15";
    private double combustible = 0;

    
    public boolean despegar(){
        if (combustible > 10){
            combustible -= 5;
            return true;
        }
        return false;
    }
    
    public void avanzar(double km){
        if ((despegar())&&(combustible - (km*0.10) > 0)){
            combustible -= (km*0.10);
            System.out.println("La nave recorreo: "+km+" km");
        } else {
            System.out.println("Combustible insuficiente");
        }
    }
    
    public void recargarCombustible(double carga){
        if(carga > 0.0){
            combustible += carga;
        } else {
            System.out.println("Error de carga");
        }
    }
    
    public void mostrarEstado(){
        System.out.println("Nombre de la nave: "+nombre);
        System.out.println("Combustible actual: "+combustible);
        System.out.println("Estado de despliege: "+despegar());
        
    }
}